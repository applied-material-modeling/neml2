@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

include("${CMAKE_CURRENT_LIST_DIR}/neml2targets.cmake")
list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/Modules")

# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# torch
set(torch_ROOT @torch_ROOT@)
if(@torch_cuda_FOUND@)
  find_dependency(torch MODULE REQUIRED COMPONENTS core cuda)
else()
  find_dependency(torch MODULE REQUIRED COMPONENTS core)
endif()

# wasp
set(wasp_ROOT ${_IMPORT_PREFIX})
find_dependency(wasp MODULE REQUIRED COMPONENTS core hit)

# hit
set(hit_ROOT ${_IMPORT_PREFIX})
find_dependency(hit MODULE REQUIRED)

# timpi
if(@timpi_FOUND@)
  set(timpi_BUILD_TYPE @timpi_BUILD_TYPE@)
  set(timpi_ROOT ${_IMPORT_PREFIX})
  find_dependency(timpi MODULE REQUIRED)
endif()

# json
if(@NEML2_JSON@)
  find_dependency(nlohmann_json CONFIG REQUIRED PATHS ${_IMPORT_PREFIX} NO_DEFAULT_PATH)
endif()

# gperftools
if(@gperftools_FOUND@)
  set(gperftools_ROOT ${_IMPORT_PREFIX})
  find_dependency(gperftools MODULE REQUIRED COMPONENTS profiler)
endif()
